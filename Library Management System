class Book:
    def __init__(self,book_id,title,author):
        self.title=title
        self.author=author
        self.book_id=book_id
        self.is_accessible=True
    def _str_(self):
        return f"{self.title} by {self.author} (ID: {self.book_id})"

class Member:
    def __init__(self,name,mem_id):
        self.name=name
        self.mem_id=mem_id
    def _str_(self):
        return f"{self.name} (ID: {self.mem_id})"

class Library:
    def __init__(self,books,members):
        self.books=[]
        self.members=[]
    def add_book(self,book):
        self.books.append(book)
    def add_member(self,member):
        self.members.append(member)
    def display_books_accessible(self):
        books_accessible=[book for book in self.books if book.is_accessible]
        for book in books_accessible:
            print(book)
    def book_borrowed(self,mem_id,book_id):
        member=self.FindMemberByID(mem_id)
        book=self.FindBookByID(book_id)
        if member and book and book.is_accessible:
            member.books_borrowed.append(book)
            book.is_accessible=False
            print(member.name,"borrowed",book.title)
    def book_return(self,mem_id,book_id):
        member=self.FindMemberByID(mem_id)
        book=next((b for b in member.books_borrowed if b.book_id),None)
        if member and book:
            member.books_borrowed.remove(book)
            book.is_accessible=True
            print(member.name,"returned",book.title)
    def FindMemberByID(self,mem_id):
        return next((member for member in self.members if member.mem_id==mem_id),None)
    def FindBookByID(self,book_id):
        return next((book for book in self.books if book.book_id==book_id),None)

book1=Book(1,"Treasure Island","Jules")
book2=Book(2,"Jungle Book","Ruskin Bond")
book3=Book(3,"Oliver Twist","Mark Twain")

member1=Member("Teja",501)
member2=Member("Swapna",502)
member3=Member("Sandeep",503)

library=Library()
library.add_book(book1)
library.add_book(book2)
library.add_member(member1)
library.add_member(member2)
library.add_book(book3)
library.add_member(member3)
library.display_books_accessible()
library.book_borrowed(503,1)
library.book_borrowed(502,2)
library.book_return(502,2)
library.display_books_accessible()
